#include <iostream>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <unistd.h>
#include <string.h>
#include <time.h>
#include <stdlib.h>
#include <errno.h>
#include <cstdio>



using namespace std;



int main(int argc, char *argv[])
{
	if(argc != 2)
	{
		cout<<"Usage syntax: ./client <port_no>"<<endl;
		return 0;
	}

	struct sockaddr_in clientSocket,serverSocket;
	int clientSocketId,serverSocketId;


	//Create a new Socket
	serverSocketId = socket(PF_INET, SOCK_STREAM, 0);

	if(serverSocketId == -1)
	{
		perror("The following error occurred");	
		return -1;
	}
	else
		cout<<"Socket successfully created."<<endl;

/*
	//Save Client Socket Address Information
	clientSocket.sin_family = AF_INET;
	clientSocket.sin_port = htons(atoi(argv[2]));
	clientSocket.sin_addr.s_addr = inet_addr(argv[1]);
	memset(clientSocket.sin_zero,0,sizeof(clientSocket.sin_zero));
*/

	//Save Server Socket Address Information
	serverSocket.sin_family = AF_INET;
	serverSocket.sin_port = htons(atoi(argv[1]));
	serverSocket.sin_addr.s_addr = INADDR_ANY;
	memset(serverSocket.sin_zero,0,sizeof(serverSocket.sin_zero));


/*	//Connect To The Destination Server
	//int temp = connect(serverSocketId, (struct sockaddr *)&clientSocket, sizeof(struct sockaddr));//=====================
*/

	//Bindig the Socket to a port
	int temp = bind(serverSocketId, (struct sockaddr *)&serverSocket, sizeof(struct sockaddr));

	if(temp == -1)
	{
		perror("The following error occurred");	
		return -1;
	}
	else
		cout << "Server started running at "<< inet_ntoa(serverSocket.sin_addr)  << ":" << argv[1] << endl;


	//Listen and accept a connection from the port
	temp = listen(serverSocketId, 20);

	if(temp == -1)
	{
		perror("The following error occurred");	
		return -1;
	}
/*	else
		cout<<"Shit!!!"<<endl;
*/
//	socklen_t addrlen = sizeof(struct sockaddr);
	socklen_t addrlen = sizeof(clientSocket);

	clientSocketId = accept(serverSocketId, (struct sockaddr *)&clientSocket, &addrlen);//?Doubt if it will work or no

	if(clientSocketId == -1)
	{
		perror("The following error occurred");	
		return -1;
	}
	else
		cout<<"Connection accepted."<<endl;


	pid_t pid = fork();

	if(pid > 0)
	{
		while(true)
		{
			//Receive data from the server
			char receivedBuff[100];
//			cout<<sizeof(receivedBuff)<<endl;

			temp = recv(clientSocketId, receivedBuff, sizeof(receivedBuff), 0);

			if(temp == -1)
			{
				cout<<"Data could not be received :"<<endl;
				perror("The following error occurred");	
			}
			else if(temp == 0)
			{
				cout<<"Connection closed by remote machine."<<endl;
				break;
			}
			else
			{
//				cout<<"Data successfully received."<<endl;
				cout << "Client 1 :-  " << receivedBuff << endl;
			}
	
		}
	}
	else
	{
		while(true)
		{
			char buff[50];
			cout<<"Server : ";
			cin.getline(buff,50);
		
			int bytesSent = send(clientSocketId, buff, strlen(buff)+1, 0);//==========================?Which Socket Descriptor to be used

			if(bytesSent == -1)
			{
				perror("The following error occurred");	
				return -1;
			}
//			else
//				cout<<"Sent "<<bytesSent<<" bytes."<<endl;

		}//===========================closed here
	}

	close(clientSocketId);
	close(serverSocketId);

	return 0;
}
